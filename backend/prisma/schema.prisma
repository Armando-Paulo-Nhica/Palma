
generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:@localhost:3306/palma2"
}

model Employer {
  id        BigInt   @id @default(autoincrement())
  email     String   @unique @db.VarChar(50)
  fullname  String   @unique @db.VarChar(35)
  username  String   @unique @db.VarChar(20)
  password  String   @db.VarChar(128)
  isAdmin   Boolean  @default(false)
  status    String   @db.VarChar(10)
  createdAt DateTime @default(now())
  sales     Sale[]

  @@map("employers")
}

model Customer {
  id        Int      @id @default(autoincrement())
  fullname  String   @unique @db.VarChar(35)
  contact   String   @unique @db.VarChar(15)
  createdAt DateTime @default(now())
  sale      Sale[]

  @@map("customers")
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String    @unique @db.VarChar(50)
  product Product[]

  @@map("categories")
}

model Product {
  
  id         BigInt         @id @default(autoincrement())
  name       String      @unique @db.VarChar(35)
  barcode    BigInt      @unique
  sell  Decimal     @db.Decimal(12, 2)
  shop Decimal     @db.Decimal(12, 2)
  quantity Int
  expiresIn String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  categoryId Int
  category   Category    @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  sales      SaleOrder[]
  purchases PurchaseProduct[]
  
  @@map("products")
}

model PurchaseProduct{
  name  String    @db.VarChar(50)
  sell  Decimal       @db.Decimal(12, 2)
  shop Decimal        @db.Decimal(12, 2)
  quantity Int
  expiresIn String
  purchaseId BigInt
  purchase   Purchase    @relation(fields: [purchaseId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId BigInt
  product   Product    @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([purchaseId, productId])

  @@map("purchaseProducts")
}

model Purchase{
   id   BigInt     @id @default(autoincrement())
  supplierId Int
  invoice Int 
  totalShop Decimal @db.Decimal(12, 2) @default(0)
  supplier   Supplier    @relation(fields: [supplierId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  purchases PurchaseProduct[]
  @@map("purchases")
}

model Supplier {
  id          Int       @id @default(autoincrement())
  name        String    @unique @db.VarChar(35)
  email       String?    @db.VarChar(35)
  contact String?      @db.VarChar(10)
  products    Purchase[]

  @@map("suppliers")
}

model Sale {
  id          BigInt         @id @default(autoincrement())
  totalAmount Decimal     @db.Decimal(12, 2)
  createdAt   DateTime    @default(now())
  customerId  Int?        
  employerId  BigInt
  items       SaleOrder[]
  customer    Customer?  @relation(fields: [customerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  employer    Employer    @relation(fields: [employerId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("sales")
}

model SaleOrder {
  quantity  Int
  subTotal  Decimal @db.Decimal(12, 2)
  saleId    BigInt
  productId BigInt
  prodduct  Product  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  sale      Sale     @relation(fields: [saleId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([saleId, productId])
  @@map("saleorders")
}

model Service {
  id          Int     @id @default(autoincrement())
  name        String  @unique @db.VarChar(35)
  description String  @db.VarChar(255)
  price       Decimal @db.Decimal(12, 2)

  @@map("services")
}

model Company {
  id             Int     @id @default(autoincrement())
  name           String  @unique @db.VarChar(50)
  city           String  @db.VarChar(30)
  contact String  @db.VarChar(10)
  email          String? @db.VarChar(30)
  zone String
  @@map("company")
}
